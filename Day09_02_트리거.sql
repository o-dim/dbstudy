SET SERVEROUTPUT ON;

-- TRIG1 정의
CREATE OR REPLACE TRIGGER TRIG1
    AFTER
    UPDATE
    ON EMPLOYEES
    FOR EACH ROW
BEGIN
    DBMS_OUTPUT.PUT_LINE('HELLO WORLD');
END;

-- TRIG1 동작 확인(EMPLOYEES 테이블ㄹ의 데이터를 수정해보기
UPDATE EMPLOYEES
   SET LAST_NAME = 'QUEEN'
 WHERE EMPLOYEE_ID = 100;
 
DROP TRIGGER TRIG1;

-- TRIG2 정의
CREATE OR REPLACE TRIGGER TRIG2
    AFTER
    INSERT OR UPDATE OR DELETE -- 순서 없음
    ON EMPLOYEES
    FOR EACH ROW
BEGIN
    IF INSERTING THEN -- 삽입 후 동작할 작업
        DBMS_OUTPUT.PUT_LINE('INSERT를 했네용');
    ELSIF UPDATING THEN
        DBMS_OUTPUT.PUT_LINE('UPDATE를 했군용');
    ELSIF DELETING THEN
        DBMS_OUTPUT.PUT_LINE('DELETE를 했네요뿅');
    END IF;
END;

-- TRIG2 동작 확인
INSERT INTO EMPLOYEES(EMPLOYEE_ID, LAST_NAME, EMAIL, HIRE_DATE, JOB_ID) VALUES(99, 'A', 'A', SYSDATE, 'A');

DROP TRIGGER TRIG2;

-- OLD 테이블 

-- TRIG3 정의
CREATE OR REPLACE TRIGGER TRIG3
    AFTER
    UPDATE OR DELETE
    ON EMPLOYEES
    FOR EACH ROW
BEGIN
    IF UPDATING THEN
        DBMS_OUTPUT.PUT_LINE('수정 전 LAST_NAME : ' || :OLD.LAST_NAME);
    ELSIF DELETING THEN
        DBMS_OUTPUT.PUT_LINE('삭제 전 LAST_NAME : ' || :OLD.LAST_NAME);
    END IF;
END;

-- TRIG3 동작 확인
UPDATE EMPLOYEES SET LAST_NAME = 'KIM' WHERE EMPLOYEE_ID = 100;
DELETE FROM EMPLOYEES WHERE EMPLOYEE_ID = 100;

DROP TRIGGER TRIG3;

-- 트리거 실습
-- 사원 테이블에서 삭제할 사원정보를 퇴사자 테이블로 삽입하는 RETIRE_TRIG 생성하기
/*
작업 순서
1. 사원테이블의 구조를 복사하여 퇴사자 테이블을 생성한다
2. 퇴사자 테이블에 퇴사번호 RETIRE_ID, 퇴사일자 RETIRE_DATE 칼럼을 추가한다
3. 퇴사번호 RETIRE_ID 칼럼을 기본키로 지정한다
4. 퇴사번호를 생성할 RETIRE_SEQ 시퀀스를 생성한다.
5. RETIRE_TRIG 트리거를 생성한다
    1) AFTER DELETE 트리거임
    2) OLD 테이블의 데이터를 모두 퇴사자 테이블로 삽입한다
    3) 퇴사번호는 시퀀스, 퇴사일자는 SYSDATE로 처리해서 삽입한다 
*/
DROP TABLE RETIRE_TBL;

CREATE TABLE RETIRE_TBL AS(SELECT * FROM GDJ61.EMPLOYEES WHERE 1=2);

ALTER TABLE RETIRE_TBL
ADD RETIRE_ID NUMBER NOT NULL;
ALTER TABLE RETIRE_TBL
ADD RETIRE_DATE DATE;

ALTER TABLE RETIRE_TBL
ADD CONSTRAINTS PK_RETIRE PRIMARY KEY (RETIRE_ID);

DROP SEQUENCE RETIRE_SEQ;
CREATE SEQUENCE RETIRE_SEQ
NOCACHE;

CREATE OR REPLACE TRIGGER RETIRE_TRIG
AFTER
DELETE ON EMPLOYEES
FOR EACH ROW
BEGIN
    INSERT INTO RETIRE_TBL(RETIRE_ID, RETIRE_DATE, EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, MANAGER_ID, DEPARTMENT_ID)
            VALUES(RETIRE_SEQ.NEXTVAL, SYSDATE, :OLD.EMPLOYEE_ID, :OLD.FIRST_NAME, :OLD.LAST_NAME, :OLD.EMAIL, :OLD.PHONE_NUMBER, :OLD.HIRE_DATE, :OLD.JOB_ID, :OLD.SALARY, :OLD.MANAGER_ID, :OLD.DEPARTMENT_ID);
END;

DELETE FROM EMPLOYEES WHERE EMPLOYEE_ID BETWEEN 150 AND 200;